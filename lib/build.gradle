plugins {
    id "antlr"
    id "com.diffplug.spotless" version "6.11.0"
    id "io.freefair.lombok" version "6.5.1"
    id "jacoco"
    id "java-library"
}

repositories {
    mavenCentral()
}

dependencies {
    // api dependencies are exported to consumers
    // implementation dependencies are not.
    api project(':common')
    api project(':preprocessor')

    antlr "org.antlr:antlr4:4.11.1"
    api "org.antlr:antlr4-runtime:4.13.0"

    testImplementation "org.junit.jupiter:junit-jupiter:5.9.0"
}


/*
 * Antlr configuration
 */

generateGrammarSource {
    arguments += [
        // Generate state transition graphs
        "-atn",
        // Needed to make gradle aware of grammar imports.
        "-lib", "src/main/antlr/com/lucaskjaerozhang/wikitext_parser/grammar/parse",
        "-package", "com.lucaskjaerozhang.wikitext_parser.grammar.parse",
        "-long-messages",
        "-visitor",
    ]
}

/*
 * Formatter configuration
 */

spotless {
    antlr4 {
        target "src/*/antlr/**/*.g4"
        antlr4Formatter()
    }
    
    java {
        target project.fileTree(project.rootDir) {
            include "lib/**/*.java"
            exclude "lib/build/generated-src/**/*.*"
        }
        removeUnusedImports()
        googleJavaFormat()
    }

    json {
        target "src/**/*.json"
        simple().indentWithSpaces(4)
    }
}

/*
 * Test configuration
 */

tasks.named("test") {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

check.dependsOn jacocoTestReport

/*
 * Githooks
 * Makes sure formatter is run and javadocs are generated for every commit.
 */

// Automatically run formatter on git commit.
tasks.register("installGitHooks", Copy) {
    from "./../scripts/pre-commit"
    into "./../.git/hooks"
}
compileJava.dependsOn installGitHooks

/*
 * Javadocs
 */

javadoc {
    source = sourceSets.main.allJava

    // This is the path for antlr generated code, which we should not include.
    exclude "com/lucaskjaerozhang/wikitext_parser/grammar/**"

    options.tags = [
        "horizontalRule",
    ]
}

task docs(type: Copy) {
    from "build/docs/javadoc"
    into "../docs"
}
docs.dependsOn javadoc