plugins {
    id 'java-library'
    id 'antlr'
    id 'com.diffplug.spotless' version '6.9.1'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    // api dependencies are exported to consumers
    // implementation dependencies are not.

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'

    antlr "org.antlr:antlr4:4.10.1"
    api "org.antlr:antlr4-runtime:4.10.1"
}


/*
 * Antlr configuration
 */

generateGrammarSource {
    arguments += [
        // Generate state transition graphs
        "-atn",
        // Needed to make gradle aware of grammar imports.
        "-lib", "src/main/antlr/com/lucaskjaerozhang/wikitext_parser/grammar",
        "-package", "com.lucaskjaerozhang.wikitext_parser.grammar",
        "-long-messages",
        "-visitor",
    ]
}

/*
 * Formatter configuration
 */

spotless {
    java {
        target project.fileTree(project.rootDir) {
            include '**/*.java'
            exclude 'lib/build/generated-src/**/*.*'
        }
        removeUnusedImports()
        googleJavaFormat()
    }

    antlr4 {
        target 'src/*/antlr/**/*.g4'
        antlr4Formatter()
    }
}

/*
 * Test configuration
 */

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

/*
 * Githooks
 * Makes sure formatter is run and javadocs are generated for every commit.
 */

// Automatically run formatter on git commit.
tasks.register('installGitHooks', Copy) {
    from './../scripts/pre-commit'
    into './../.git/hooks'
}
compileJava.dependsOn installGitHooks

/*
 * Javadocs
 */

javadoc {
    source = sourceSets.main.allJava

    // This is the path for antlr generated code, which we should not include.
    exclude 'com/lucaskjaerozhang/wikitext_parser/grammar/**'

    options.tags = [
        "horizontalRule",
    ]
}

task docs(type: Copy) {
    from 'build/docs/javadoc'
    into '../docs'
}
docs.dependsOn javadoc